


@model Diplomski.Models.User




@{
    ViewBag.Title = "RegisterUser";
}



@*<body>
    <script type="text/javascript" src="~/assets/js/jquery.backstretch.min.js"></script>

    <div class="backstretch" style="left: 0px; top: 0px; overflow: hidden; margin: 0px; padding: 0px; height: 852px; width: 924px; z-index: -999999; position: fixed;">
        <img src="~/assets/ibu-bg.jpg" style="position: absolute; margin: 0px; padding: 0px; border: none; width: 1412.87px; height: 852px; max-width: none; z-index: -999999; left: -244.436px; top: 0px;">
    </div>
</body>*@

@*@using (Html.BeginForm())*@
<form enctype="multipart/form-data" method="post">

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            <h2>User Profile Creation</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*/@Html.DropDownList("Departments","Select Department")*@




            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                <br />
            </div>

            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                <br />
            </div>

            @Html.LabelFor(model => model.EmployeeRegNum, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.EmployeeRegNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeRegNum, "", new { @class = "text-danger" })
                <br />
            </div>

            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                <br />
            </div>

            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                <br />
            </div>

            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                <br />
            </div>


            @*<div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("Title", new List<SelectListItem> {

                   new SelectListItem {Text = " Research Assistant", Value="Research Assistant" },
                   new SelectListItem {Text = "Higher Research Assistant", Value="Higher Research Assistant" },
                   new SelectListItem {Text = "Assistant Professor", Value="Assistant Professor" },
                    new SelectListItem {Text = "Associate Professor", Value="Associate Professor" },
                     new SelectListItem {Text = "Professor", Value="Professor" },
                     new SelectListItem {Text = "Head of Department", Value="Head of Department" },
                      new SelectListItem {Text = "Dean", Value="Dean" }




                    }, "Select Title")

                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })


                </div>
            </div>*@


            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.Title, @ViewBag.TitleName as SelectList, "Select Title", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                <br />
            </div>







            @*<div class="form-group">
                @Html.LabelFor(model => model.Faculty, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("Faculty", new List<SelectListItem> {

                   new SelectListItem {Text = "Faculty of Education", Value="Faculty of Education" },
                   new SelectListItem {Text = "Faculty of Economics and Social Sciences", Value="Faculty of Economics and Social Sciences" },
                   new SelectListItem {Text = "Faculty of Engineering and Information Technologies", Value="Faculty of Engineering and Information Technologies" }




                    }, "Select Faculty")
                    @Html.ValidationMessageFor(model => model.Faculty, "", new { @class = "text-danger" })

                </div>
            </div>*@

            @Html.LabelFor(model => model.Faculty, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.Faculty, @ViewBag.FacultyName as SelectList, "Select Faculty", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Faculty, "", new { @class = "text-danger" })
                <br />
            </div>









            @*<div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownList("Department", new List<SelectListItem> {

               new SelectListItem {Text = "Department of Information Technologies", Value="Department of Information Technologies" },
               new SelectListItem {Text = "Department of Genetics and Bioengineering", Value="Department of Genetics and Bioengineering" },
               new SelectListItem {Text = "Department of Electrical And Electronics Engineering", Value="Department of Electrical And Electronics Engineering" },
               new SelectListItem {Text = "Department of Architecture", Value="Department of Architecture" },
               new SelectListItem {Text = "Department of Management", Value="Department of Management" },
               new SelectListItem {Text = "Department of International Relations and European Studies", Value="Department of International Relations and European Studies" },
               new SelectListItem {Text = "Department of International Business", Value="Department of International Business" },
               new SelectListItem {Text = "Department of Banking and Finance", Value="Department of Banking and Finance" },
               new SelectListItem {Text = "Department of Oriental Philology", Value="Department of Oriental Philology" },
               new SelectListItem {Text = "Department of English Language and Literature", Value="Department of English Language and Literature" },
                  new SelectListItem {Text = "None", Value="None" }



                }, "Select Department")
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })*@



            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.Department, @ViewBag.DepartmentName as SelectList, "Select Department", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                <br />
            </div>







            @*@Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })*@




            @*<div class="editor-label">
                @Html.LabelFor(model => model.Id)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Id, @ViewBag.Id as SelectList, "Select Country")
                @Html.ValidationMessageFor(model => model.Id)
            </div>*@

            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-4" })

            <div class="col-md-8">
                @Html.DropDownListFor(model => model.CountryName, @ViewBag.CountryName as SelectList, "Select Country", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger" })
                <br />
            </div>



            @*<div class="form-group">
                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @*<input class="form-control" type="date" placeholder="Date of Birth" name="DateOfBirth" value="@if (Model.DateOfBirth != null) {@Model.DateOfBirth.ToString("yyyy-MM-dd")} " />*@
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                <br />
            </div>
            @*<div class="form-group">
                @Html.LabelFor(model => model.ElectoralPeriod, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ElectoralPeriod, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ElectoralPeriod, "", new { @class = "text-danger" })
                </div>
            </div>*@








            @Html.LabelFor(model => model.ElectoralPeriod, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ElectoralPeriod, @ViewBag.ElectoralPeriodName as SelectList, "Select Electoral Period", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ElectoralPeriod, "", new { @class = "text-danger" })
                <br />
            </div>


            @Html.LabelFor(model => model.ContractExpiration, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ContractExpiration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractExpiration, "", new { @class = "text-danger" })
                <br />
            </div>

            @Html.LabelFor(model => model.NumberOfLeaveDays, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.NumberOfLeaveDays, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfLeaveDays, "", new { @class = "text-danger" })
                <br />
            </div>



            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                <br />
            </div>

            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                <br />
            </div>



            @*<h6> </h6>*@









            @Html.LabelFor(model => model.EmploymentStatus, htmlAttributes: new { @class = "control-label col-md-4" })

            <div class="col-md-8">
                @Html.DropDownListFor(model => model.EmploymentStatus, @ViewBag.EmploymentName as SelectList, "Select Employment Type", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmploymentStatus, "", new { @class = "text-danger" })
                <br />
            </div>


            @*<h6> </h6>*@

            @Html.LabelFor(model => model.Stay, htmlAttributes: new { @class = "control-label col-md-4" })

            <div class="col-md-8">
                @Html.DropDownListFor(model => model.Stay, @ViewBag.StayName as SelectList, "Select Stay Type", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Stay, "", new { @class = "text-danger" })
                <br />
            </div>





            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <input class="form-control" type="file" name="nesto" />
                <div class="col-md-8">
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
                <br />
            </div>



            @Html.LabelFor(model => model.ChiefHRManager, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <div class="checkbox zaHRM">
                    @Html.EditorFor(model => model.ChiefHRManager)
            
                    <br />
                    <br />
                    <br />
                </div>



                <div class="col-md-offset-2 col-md-8">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
                <br />

                <input type="hidden" name="Id" value="@Model.Id" /> 


            </div>
            </div>
        </div>
        
</form>


<div class="boja">
    @Html.ActionLink("Back to home", "HRMHome", null, new { style = "color:white" })
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}







<style>
    .form-horizontal {
        width: 700px;
        padding: 8% 0 0;
        margin: auto;
    }

    .form-group {
        position: relative;
        z-index: 1;
        background: #fff;
        max-width: 700px;
        margin: 0 auto 100px;
        padding: 45px;
        text-align: center;
        box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);
    }




    body {
       color:black;
       background-color:transparent;
    }
    html {
      
 
        background: url('/assets/ibu-bg.jpg') no-repeat center center fixed;
        /*webkit-background-size: cover;
        -moz-background-size: cover;
        -o-background-size: cover;*/
        background-size: cover;

    }


    .btn-default {
        background: #008CBA;
        color: white;
    }

    
    .slikamynigga{
        margin-right:13px;
    }
    .slika{
        margin-right:-115px;
    }

    .zaHRM {
        margin-left: -200px;
    }
</style>

